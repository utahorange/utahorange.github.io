<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en"><generator uri="https://jekyllrb.com/" version="4.4.1">Jekyll</generator><link href="https://utahorange.github.io/feed.xml" rel="self" type="application/atom+xml" /><link href="https://utahorange.github.io/" rel="alternate" type="text/html" hreflang="en" /><updated>2025-09-28T18:11:53+00:00</updated><id>https://utahorange.github.io/feed.xml</id><title type="html">blank</title><subtitle>Tai-Yu Chen&apos;s website
</subtitle><entry><title type="html">Automating Notes</title><link href="https://utahorange.github.io/blog/2025/automating-notes/" rel="alternate" type="text/html" title="Automating Notes" /><published>2025-04-01T15:00:00+00:00</published><updated>2025-04-01T15:00:00+00:00</updated><id>https://utahorange.github.io/blog/2025/automating-notes</id><content type="html" xml:base="https://utahorange.github.io/blog/2025/automating-notes/"><![CDATA[<p>Previously, I’ve written on Medium about how I use Obsidian for notetaking and how it’s been a very large part of how I get through schoolwork and learning things in general. Recently, I’ve finally done something I should’ve done a long time ago, which is to move away from Google Drive and use Git for version control.</p>

<p>Below is my current backup script, automated with crontabs to run every night at 11 pm. The right thing to do is to put this script up as a Github Gist, but I felt that an article on my site seems more organized.</p>

<p>To do this for yourself is pretty easy. Store your notes somewhere locally or something that is accessible by your file system. Start a git repository in that directory and set as the remote an empty repository on Github. You’ll need to authenticate with the command-line Github authenticator for this to work.</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c">#!/bin/bash</span>

<span class="nv">current_date</span><span class="o">=</span><span class="si">$(</span><span class="nb">date</span> <span class="s1">'+%Y-%m-%d'</span><span class="si">)</span>
<span class="nb">dir</span><span class="o">=</span>my/notes/directory/on/Google/Drive

<span class="c"># Attempting to zip files for local backup</span>

<span class="nv">num_files</span><span class="o">=</span><span class="si">$(</span><span class="nb">ls</span> <span class="nt">-1</span> <span class="s2">"</span><span class="nv">$dir</span><span class="s2">"</span> | <span class="nb">wc</span> <span class="nt">-l</span><span class="si">)</span>

<span class="nb">echo</span> <span class="s2">"Attempting to zip </span><span class="nv">$dir</span><span class="s2">, which contains </span><span class="nv">$num_file</span><span class="s2"> files for local backup..."</span>

<span class="o">{</span>

zip <span class="nt">-rq</span> ~/Documents/Backups/Notes/<span class="s2">"</span><span class="nv">$current_date</span><span class="s2">"</span>.zip <span class="s2">"</span><span class="nv">$dir</span><span class="s2">"</span>/<span class="k">*</span> <span class="o">&amp;&amp;</span> <span class="nb">echo</span> <span class="s2">"Success. Backup created </span><span class="nv">$current_date</span><span class="s2">"</span> 

<span class="o">}</span> <span class="o">||</span> <span class="o">{</span>

<span class="nb">echo</span> <span class="s2">"Backup failed."</span>

<span class="o">}</span>

<span class="c"># Push Changes to Github</span>
<span class="nb">echo</span> <span class="s2">"Attempting to commit and push changes to GitHub..."</span>

<span class="nb">cd</span> <span class="s2">"</span><span class="nv">$dir</span><span class="s2">"</span> <span class="o">||</span> <span class="o">{</span> <span class="nb">echo</span> <span class="s2">"Failed to cd into </span><span class="nv">$dir</span><span class="s2">"</span><span class="p">;</span> <span class="nb">exit </span>1<span class="p">;</span> <span class="o">}</span>

<span class="c"># Check for changes</span>
<span class="k">if</span> <span class="o">[</span> <span class="nt">-n</span> <span class="s2">"</span><span class="si">$(</span>git status <span class="nt">--porcelain</span><span class="si">)</span><span class="s2">"</span> <span class="o">]</span><span class="p">;</span> <span class="k">then
    </span>git add <span class="nb">.</span>
    git commit <span class="nt">-m</span> <span class="s2">"Daily backup auto-commit: </span><span class="nv">$current_date</span><span class="s2">"</span>
    git push origin main <span class="o">||</span> <span class="nb">echo</span> <span class="s2">"Git push failed."</span>
<span class="k">else
    </span><span class="nb">echo</span> <span class="s2">"No changes to commit."</span>
<span class="k">fi</span>

<span class="c"># Deleting files older than 3 days</span>
<span class="nb">echo</span> <span class="s2">"Attempting to delete files older than 3 days"</span>
<span class="o">{</span>

find ~/Documents/Backups/Notes <span class="nt">-mindepth</span> 1 <span class="nt">-mtime</span> +3 <span class="nt">-delete</span>

<span class="o">}</span> <span class="o">||</span> <span class="o">{</span>

<span class="nb">echo</span> <span class="s2">"Failed to delete files older than 3 days"</span>

<span class="o">}</span>
</code></pre></div></div>]]></content><author><name></name></author><category term="workflow" /><summary type="html"><![CDATA[Previously, I’ve written on Medium about how I use Obsidian for notetaking and how it’s been a very large part of how I get through schoolwork and learning things in general. Recently, I’ve finally done something I should’ve done a long time ago, which is to move away from Google Drive and use Git for version control. Below is my current backup script, automated with crontabs to run every night at 11 pm. The right thing to do is to put this script up as a Github Gist, but I felt that an article on my site seems more organized. To do this for yourself is pretty easy. Store your notes somewhere locally or something that is accessible by your file system. Start a git repository in that directory and set as the remote an empty repository on Github. You’ll need to authenticate with the command-line Github authenticator for this to work. #!/bin/bash current_date=$(date '+%Y-%m-%d') dir=my/notes/directory/on/Google/Drive # Attempting to zip files for local backup num_files=$(ls -1 "$dir" | wc -l) echo "Attempting to zip $dir, which contains $num_file files for local backup..." { zip -rq ~/Documents/Backups/Notes/"$current_date".zip "$dir"/* &amp;&amp; echo "Success. Backup created $current_date" } || { echo "Backup failed." } # Push Changes to Github echo "Attempting to commit and push changes to GitHub..." cd "$dir" || { echo "Failed to cd into $dir"; exit 1; } # Check for changes if [ -n "$(git status --porcelain)" ]; then git add . git commit -m "Daily backup auto-commit: $current_date" git push origin main || echo "Git push failed." else echo "No changes to commit." fi # Deleting files older than 3 days echo "Attempting to delete files older than 3 days" { find ~/Documents/Backups/Notes -mindepth 1 -mtime +3 -delete } || { echo "Failed to delete files older than 3 days" }]]></summary></entry><entry><title type="html">Boost Your Long-Term Memory with Anki: A Proven Study Tool</title><link href="https://utahorange.github.io/blog/2024/boost-your-long-term-memory-with-anki-a-proven-study-tool/" rel="alternate" type="text/html" title="Boost Your Long-Term Memory with Anki: A Proven Study Tool" /><published>2024-10-13T00:02:01+00:00</published><updated>2024-10-13T00:02:01+00:00</updated><id>https://utahorange.github.io/blog/2024/boost-your-long-term-memory-with-anki-a-proven-study-tool</id><content type="html" xml:base="https://utahorange.github.io/blog/2024/boost-your-long-term-memory-with-anki-a-proven-study-tool/"><![CDATA[]]></content><author><name></name></author></entry><entry><title type="html">Getting CCNA-certified</title><link href="https://utahorange.github.io/blog/2023/ccna/" rel="alternate" type="text/html" title="Getting CCNA-certified" /><published>2023-08-01T15:00:00+00:00</published><updated>2023-08-01T15:00:00+00:00</updated><id>https://utahorange.github.io/blog/2023/ccna</id><content type="html" xml:base="https://utahorange.github.io/blog/2023/ccna/"><![CDATA[<p>Earlier this week I passed the CCNA 200-301 exam. Most of the skills and knowledge related to this exam I acquired passively in 3 years of CyberPatriot Nationals preparation. Thus this article might be less helpful for those starting from scratch.</p>

<p>On the other hand, for those who are in a similar situation, you may be interested in getting the CCNA to validate your years of labor with a certification.</p>

<p>If you want to immediately get started, jump to <a href="#checklist">here</a>.</p>

<h2 id="about-the-examcert">about the exam/cert</h2>
<p>CCNA stands for Cisco Certified Network Associate. It’s not the highest-level Cisco certification you can get (that would be CCNP). It is technically entry-level, but it is not the most entry-level networking certification you can get.</p>

<h2 id="my-experience">my experience</h2>
<p>I tested at the same testing center as I did for the <a href="https://medium.com/@taiyu_chen/guaranteed-pass-comptia-security-3bdefee9f319">Security Plus</a> certification. This time, there were a few technical issues with Internet, which caused me to lose maybe 3-5 minutes of test-taking time. As I was going relatively slowly, I almost ran out of time with this exam. You are not allowed to go back to previous questions, which means that going at a fast pace does not give you any benefits.</p>

<p>There were 3 simulation questions, which gave a topology, the CLI prompts of a few devices (around 3), and instructions on what to configure. I found these to be very similar to the labs offered on the CyberPatriot Netacad course, though worded differently. The topics I saw as I recall were:</p>
<ol>
  <li>Configure NAT, DHCP, and SSH for a certain user. You were instructed to check the configurations by looking at IP addresses and attempting SSH. The NAT part was sort of odd, because the topology was three routers and you were essentially giving private addresses to just one router port. SSH relied on DHCP properly configured. There’s a slight bug, where the router port might reassign itself a new IP from DHCP without you prompting it, which forced me to redo the DHCP pool. Also, I never got SSH working, which I have a suspicion is related to some ACLs that I did not check.</li>
  <li>Assign VLANs to interfaces, create VLANs, and do something with Etherchannel as I recall.</li>
  <li>Configure CDP (Cisco Discovery Protocol) and LLDP (Link Layer Discovery Protocol) per-interface. This was relatively simple. There were too many protocols to recall for this exam, so I found the start of every command for every protocol (<code class="language-plaintext highlighter-rouge">standby</code> for HSRP, <code class="language-plaintext highlighter-rouge">cdp</code> for CDP, etc) and relied on <code class="language-plaintext highlighter-rouge">?</code> during the exam.</li>
</ol>

<h2 id="checklist">checklist</h2>
<ol>
  <li>Find the complete <a href="https://learningnetwork.cisco.com/s/ccna-exam-topics">list of topics covered on the CCNA exam</a>. Copy and paste into your notes editor of choice (I personally use <a href="https://medium.com/@taiyu_chen/using-obsidian-with-google-drive-10beca66bd29">Obsidian</a>). Check off topics you are already confident in.</li>
</ol>

<figure>

  

  <video src="/assets/video/ccna_checklist.mp4" class="img-fluid rounded z-depth-1" width="auto" height="auto" autoplay="" controls="" />

  

</figure>

<ol>
  <li>Based on how many unchecked boxes are left, estimate how much time you’ll need to study. Schedule the CCNA exam accordingly to force yourself to a schedule.
    <blockquote>
      <p>I rescheduled the exam twice to give myself extra time. You can reschedule for free unlimited times as long as it is 24 hours before the exam appointment.</p>
    </blockquote>
  </li>
  <li>Start working through material pertinent to the topics you’ve never seen before. I especially noted vocabulary (e.g. <a href="https://www.9tut.com/puppet-tutorial">Ansible, Chef, and Puppet components</a>) and protocol behaviors like STP root bridge elections and OSPF convergence, which I haven’t looked at in a while. I also took note of commands that I don’t often use like in STP, LLDP, HSRP, etc. The CyberPatriot curriculum does not cover wireless networking at all, so that may be a topic of focus for you.</li>
  <li>Do a lot of practice questions to familiarize yourself with the format. The problem with this is that practice problems tend to not revolve around reading command output, which I feel is disingenuous.</li>
</ol>

<p>My impression of the exam was that you had to be really good at subnetting fast and accurately, as well as reading the output from <code class="language-plaintext highlighter-rouge">ip route</code>.</p>
<blockquote>
  <p><code class="language-plaintext highlighter-rouge">ip route</code> is actually way cooler than I imagined. I knew about the symbols (<code class="language-plaintext highlighter-rouge">D</code> for EIGRP) and so on, but Administrative Distance and metric are also displayed in the output for <em>each</em> route. Make sure you can subnet quickly so you can answer questions related to <strong>best path match</strong>.</p>
</blockquote>

<h2 id="strategies-for-during-the-exam">strategies for during the Exam</h2>
<p>You can use <code class="language-plaintext highlighter-rouge">?</code> on the simulation questions, though for me, this was not that helpful. I was used to working with Cisco Packet Tracer, which has significantly fewer options than on the testing software. Using <code class="language-plaintext highlighter-rouge">?</code> on the exam gave me way too many options to read.</p>

<p>Be mindful of time. I had 89 questions for 120 minutes but I nearly ran out of time due to both technical mishaps and working too slowly.</p>

<h2 id="resources">resources</h2>
<p>Here’s practice exams. Most of the people on reddit forums recommend paying for practice exams with Boson or something similar. I can’t really say anything to that effect, because I did not use any paid resources.</p>

<ul>
  <li><a href="https://passemall.com/learn/test/free-ccna-practice-test/ccna-practice-test-1-6154281696624640">Passemall CCNA Practice Test</a></li>
  <li><a href="https://ipcisco.com/ccna-quiz-1-n458da4/">IPCisco CCNA Quizzes</a></li>
  <li><a href="https://www.learncisco.net/tests/ccna-200-301?mode=exam">LearnCisco.net CCNA Quiz</a></li>
</ul>

<p>Here’s some miscellaneous resources.</p>

<ul>
  <li><a href="https://www.youtube.com/watch?v=H8W9oMNSuwo&amp;list=PLxbwE86jKRgMpuZuLBivzlM8s2Dk5lXBQ&amp;ab_channel=Jeremy%27sITLab">Jeremy’s video course</a> is very thorough and highly recommended though I personally did not use them.</li>
  <li><a href="https://www.jeremysitlab.com/ccna-resource">Jeremy’s IT Lab CCNA Resources</a></li>
</ul>]]></content><author><name></name></author><category term="networking" /><summary type="html"><![CDATA[Earlier this week I passed the CCNA 200-301 exam. Most of the skills and knowledge related to this exam I acquired passively in 3 years of CyberPatriot Nationals preparation. Thus this article might be less helpful for those starting from scratch. On the other hand, for those who are in a similar situation, you may be interested in getting the CCNA to validate your years of labor with a certification. If you want to immediately get started, jump to here. about the exam/cert CCNA stands for Cisco Certified Network Associate. It’s not the highest-level Cisco certification you can get (that would be CCNP). It is technically entry-level, but it is not the most entry-level networking certification you can get. my experience I tested at the same testing center as I did for the Security Plus certification. This time, there were a few technical issues with Internet, which caused me to lose maybe 3-5 minutes of test-taking time. As I was going relatively slowly, I almost ran out of time with this exam. You are not allowed to go back to previous questions, which means that going at a fast pace does not give you any benefits. There were 3 simulation questions, which gave a topology, the CLI prompts of a few devices (around 3), and instructions on what to configure. I found these to be very similar to the labs offered on the CyberPatriot Netacad course, though worded differently. The topics I saw as I recall were: Configure NAT, DHCP, and SSH for a certain user. You were instructed to check the configurations by looking at IP addresses and attempting SSH. The NAT part was sort of odd, because the topology was three routers and you were essentially giving private addresses to just one router port. SSH relied on DHCP properly configured. There’s a slight bug, where the router port might reassign itself a new IP from DHCP without you prompting it, which forced me to redo the DHCP pool. Also, I never got SSH working, which I have a suspicion is related to some ACLs that I did not check. Assign VLANs to interfaces, create VLANs, and do something with Etherchannel as I recall. Configure CDP (Cisco Discovery Protocol) and LLDP (Link Layer Discovery Protocol) per-interface. This was relatively simple. There were too many protocols to recall for this exam, so I found the start of every command for every protocol (standby for HSRP, cdp for CDP, etc) and relied on ? during the exam. checklist Find the complete list of topics covered on the CCNA exam. Copy and paste into your notes editor of choice (I personally use Obsidian). Check off topics you are already confident in. Based on how many unchecked boxes are left, estimate how much time you’ll need to study. Schedule the CCNA exam accordingly to force yourself to a schedule. I rescheduled the exam twice to give myself extra time. You can reschedule for free unlimited times as long as it is 24 hours before the exam appointment. Start working through material pertinent to the topics you’ve never seen before. I especially noted vocabulary (e.g. Ansible, Chef, and Puppet components) and protocol behaviors like STP root bridge elections and OSPF convergence, which I haven’t looked at in a while. I also took note of commands that I don’t often use like in STP, LLDP, HSRP, etc. The CyberPatriot curriculum does not cover wireless networking at all, so that may be a topic of focus for you. Do a lot of practice questions to familiarize yourself with the format. The problem with this is that practice problems tend to not revolve around reading command output, which I feel is disingenuous. My impression of the exam was that you had to be really good at subnetting fast and accurately, as well as reading the output from ip route. ip route is actually way cooler than I imagined. I knew about the symbols (D for EIGRP) and so on, but Administrative Distance and metric are also displayed in the output for each route. Make sure you can subnet quickly so you can answer questions related to best path match. strategies for during the Exam You can use ? on the simulation questions, though for me, this was not that helpful. I was used to working with Cisco Packet Tracer, which has significantly fewer options than on the testing software. Using ? on the exam gave me way too many options to read. Be mindful of time. I had 89 questions for 120 minutes but I nearly ran out of time due to both technical mishaps and working too slowly. resources Here’s practice exams. Most of the people on reddit forums recommend paying for practice exams with Boson or something similar. I can’t really say anything to that effect, because I did not use any paid resources. Passemall CCNA Practice Test IPCisco CCNA Quizzes LearnCisco.net CCNA Quiz Here’s some miscellaneous resources. Jeremy’s video course is very thorough and highly recommended though I personally did not use them. Jeremy’s IT Lab CCNA Resources]]></summary></entry><entry><title type="html">The Best Note-Taking Tool: Obsidian with Google Drive</title><link href="https://utahorange.github.io/blog/2023/the-best-note-taking-tool-obsidian-with-google-drive/" rel="alternate" type="text/html" title="The Best Note-Taking Tool: Obsidian with Google Drive" /><published>2023-07-17T16:02:22+00:00</published><updated>2023-07-17T16:02:22+00:00</updated><id>https://utahorange.github.io/blog/2023/the-best-note-taking-tool-obsidian-with-google-drive</id><content type="html" xml:base="https://utahorange.github.io/blog/2023/the-best-note-taking-tool-obsidian-with-google-drive/"><![CDATA[]]></content><author><name></name></author><summary type="html"><![CDATA[the best notetaking tool behind paperContinue reading on Medium »]]></summary></entry><entry><title type="html">Passing CompTIA Security+ Fast</title><link href="https://utahorange.github.io/blog/2023/passing-comptia-security-fast/" rel="alternate" type="text/html" title="Passing CompTIA Security+ Fast" /><published>2023-06-30T14:02:18+00:00</published><updated>2023-06-30T14:02:18+00:00</updated><id>https://utahorange.github.io/blog/2023/passing-comptia-security-fast</id><content type="html" xml:base="https://utahorange.github.io/blog/2023/passing-comptia-security-fast/"><![CDATA[]]></content><author><name></name></author></entry><entry><title type="html">BAC Summer Academy Review</title><link href="https://utahorange.github.io/blog/2023/bac-summer-academy-review/" rel="alternate" type="text/html" title="BAC Summer Academy Review" /><published>2023-06-21T18:48:22+00:00</published><updated>2023-06-21T18:48:22+00:00</updated><id>https://utahorange.github.io/blog/2023/bac-summer-academy-review</id><content type="html" xml:base="https://utahorange.github.io/blog/2023/bac-summer-academy-review/"><![CDATA[]]></content><author><name></name></author></entry><entry><title type="html">How to delete in Packet Tracer</title><link href="https://utahorange.github.io/blog/2023/how-to-delete-in-packet-tracer/" rel="alternate" type="text/html" title="How to delete in Packet Tracer" /><published>2023-06-02T22:34:31+00:00</published><updated>2023-06-02T22:34:31+00:00</updated><id>https://utahorange.github.io/blog/2023/how-to-delete-in-packet-tracer</id><content type="html" xml:base="https://utahorange.github.io/blog/2023/how-to-delete-in-packet-tracer/"><![CDATA[]]></content><author><name></name></author></entry><entry><title type="html">Make your own Packet Tracer Lab</title><link href="https://utahorange.github.io/blog/2023/make-your-own-packet-tracer-lab/" rel="alternate" type="text/html" title="Make your own Packet Tracer Lab" /><published>2023-04-23T13:01:27+00:00</published><updated>2023-04-23T13:01:27+00:00</updated><id>https://utahorange.github.io/blog/2023/make-your-own-packet-tracer-lab</id><content type="html" xml:base="https://utahorange.github.io/blog/2023/make-your-own-packet-tracer-lab/"><![CDATA[]]></content><author><name></name></author></entry><entry><title type="html">Cisco Networking in CyberPatriot</title><link href="https://utahorange.github.io/blog/2023/cisco-networking-in-cyberpatriot/" rel="alternate" type="text/html" title="Cisco Networking in CyberPatriot" /><published>2023-04-17T03:49:27+00:00</published><updated>2023-04-17T03:49:27+00:00</updated><id>https://utahorange.github.io/blog/2023/cisco-networking-in-cyberpatriot</id><content type="html" xml:base="https://utahorange.github.io/blog/2023/cisco-networking-in-cyberpatriot/"><![CDATA[]]></content><author><name></name></author></entry></feed>